name: Publish release

on:
  workflow_call:

jobs:
  publish:
    if: github.repository == 'restatedev/e2e'
    name: Publish
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      GH_PACKAGE_READ_ACCESS_USER: ${{ secrets.GH_PACKAGE_READ_ACCESS_USER }}
      GH_PACKAGE_READ_ACCESS_TOKEN: ${{ secrets.GH_PACKAGE_READ_ACCESS_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: 'https://registry.npmjs.org'

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      # Ideally we delete old packages after releasing new ones but this does not work for snapshot releases
      - name: Delete old e2e-utils packages
        uses: actions/delete-package-versions@v3
        with:
          package-name: 'dev.restate.testing.e2e-utils'
          min-versions-to-keep: 0
          # We want to remove all the versions containing SNAPSHOT in the name
          # See https://github.com/actions/delete-package-versions/issues/61
          ignore-versions: '^.*(?<!SNAPSHOT)$'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with Gradle & publish to GitHub packages repository
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: publishMavenPublicationToGitHubPackagesRepository

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/restatedev/e2e-node-services
          # Note: We need this to generate the latest tag until we have a first stable release.
          # Check https://github.com/docker/metadata-action/issues/34
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate proto
        # this relies on a symlink so it doesn't work inside the docker build
        # We use npm install to write the package-lock.json
        run: npm install && npm run proto
        working-directory: services/node-services

      - name: Build and push node-services Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./services/node-services
          file: "services/node-services/Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/amd64
          build-args: |
            GH_PACKAGE_READ_ACCESS_TOKEN=${{ secrets.GH_PACKAGE_READ_ACCESS_TOKEN }}
