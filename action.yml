name: 'Restate E2E'
description: 'Run the Restate E2E Test suite'
inputs:
  envVars:
    required: false
    description: list of vars and values used when running the test tool
  testArtifactOutput:
    required: true
    description: Name of the test artifact output to upload
  restateContainerImage:
    required: false
    description: Container image to use for Restate
    default: 'ghcr.io/restatedev/restate:main'
  exclusions:
    required: false
    description: Test exclusions file content
outputs: {}
runs:
  using: "composite"
  steps:
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Checkout tool
      uses: actions/checkout@v4
      with:
        repository: 'restatedev/e2e'

    - name: Set environment variables
      if: ${{ inputs.envVars }}
      shell: bash
      run: |
        for env in "${{ inputs.envVars }}"
        do
          printf "%s\n" $env >> $GITHUB_ENV
        done

    # Pre-emptively pull the big docker images we need in tests,
    # because pulling them counts toward the test timeout.
    - name: Pull images needed in tests
      shell: bash
      run: docker pull confluentinc/cp-kafka:7.1.0-1-ubi8 & docker pull jaegertracing/jaeger:2.5.0

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Create exclusions file
      if: ${{ inputs.exclusions != '' }}
      shell: bash
      run: |
        cat > exclusions.yaml << 'EOF'
        ${{ inputs.exclusions }}
        EOF
        echo "Exclusions file"
        cat exclusions.yaml
        echo "TEST_EXCLUSIONS_FILE=exclusions.yaml" >> $GITHUB_ENV

    - name: Run
      shell: bash
      env:
        RESTATE_CONTAINER_IMAGE: ${{ inputs.restateContainerImage }}
      run: ./gradlew run --args="run --report-dir=test-report"

    # Upload logs and publish test result
    - uses: actions/upload-artifact@v4
      if: always() # Make sure this is run even when test fails
      with:
        name: ${{ inputs.testArtifactOutput }}
        path: test-report
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          test-report/*/*.xml

