// Copyright (c) 2023 - Restate Software, Inc., Restate GmbH
//
// This file is part of the Restate e2e tests,
// which are released under the MIT license.
//
// You can find a copy of the license in file LICENSE in the root
// directory of this repository or package, or at
// https://github.com/restatedev/e2e/blob/main/LICENSE

syntax = "proto3";

option java_package = "dev.restate.e2e.services.singletoncounter";
option java_outer_classname = "SingletonCounterProto";

import "google/protobuf/empty.proto";
import "dev/restate/ext.proto";

package singleton_counter;

service SingletonCounter {
  option (dev.restate.ext.service_type) = SINGLETON;

  rpc Reset (google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc Add (CounterNumber) returns (google.protobuf.Empty);
  rpc Get (google.protobuf.Empty) returns (CounterNumber);
}

message CounterNumber {
  int64 value = 2;
}

message CounterUpdateResult {
  int64 old_value = 1;
  int64 new_value = 2;
}